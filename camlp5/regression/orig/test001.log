Testing unit function:
unit 1 = (Ok 1)
Testing ( !! ) operation:
(!!) 1 = (Ok 1)
Testing map function:
map (fun x -> x + 1) (Ok 2) = (Ok 3)
map (fun x -> x + 1) (Fail []) = (Fail [])
Testing ( -?-> ) operation:
(-?->) (Ok 2) (fun x -> x + 1) = (Ok 3)
(-?->) (Fail []) (fun x -> x + 1) = (Fail [])
Testing bind function:
bind (Ok 2) (fun x -> Ok (x + 1)) = (Ok 3)
bind (Fail []) (fun x -> Ok (x + 1)) = (Fail [])
bind (Ok 2) (fun x -> Fail []) = (Fail [])
bind (Fail []) (fun x -> Fail []) = (Fail [])
Testing ( -?->> ) operation:
(-?->>) (Ok 2) (fun x -> Ok (x + 1)) = (Ok 3)
(-?->>) (Fail []) (fun x -> Ok (x + 1)) = (Fail [])
(-?->>) (Ok 2) (fun x -> Fail []) = (Fail [])
(-?->>) (Fail []) (fun x -> Fail []) = (Fail [])
Chain ( -?-> ) test:
(-?->) ((-?->) (Ok 3) (fun x -> x + 2)) (fun x -> x + 1) = (Ok 6)
(-?->) ((-?->) (Fail []) (fun x -> x + 2)) (fun x -> x + 1) = (Fail [])
Chain -?->/-?->> test:
(-?->>) ((-?->) (Ok 3) (fun x -> x + 1)) (fun x -> Ok (x + 2)) = (Ok 6)
(-?->>) ((-?->) (Fail []) (fun x -> x + 1)) (fun x -> Ok (x + 2)) = (Fail [])
Testing list function:
list [Ok 1; Ok 2; Ok 3] = (Ok 1, 2, 3)
list [Ok 1; Fail []; Ok 3] = (Fail [])
list [Ok 1; Fail ["t1"]; Ok 3; Fail ["t2"]] = (Fail [t1, t2])
Testing ( ?| ) operation:
(?|) [Ok 1; Ok 2; Ok 3] = (Ok 1, 2, 3)
(?|) [Ok 1; Fail []; Ok 3] = (Fail [])
(?|) [Ok 1; Fail ["t1"]; Ok 3; Fail ["t2"]] = (Fail [t1, t2])
Testing array function:
array [| Ok 1; Ok 2; Ok 3 |] = (Ok 1, 2, 3)
array [| Ok 1; Fail []; Ok 3 |] = (Fail [])
array [| Ok 1; Fail ["t1"]; Ok 3; Fail ["t2"] |] = (Fail [t1, t2])
Testing ( ?|| ) operation:
(?||) [| Ok 1; Ok 2; Ok 3 |] = (Ok 1, 2, 3)
(?||) [| Ok 1; Fail []; Ok 3 |] = (Fail [])
(?||) [| Ok 1; Fail ["t1"]; Ok 3; Fail ["t2"] |] = (Fail [t1, t2])
