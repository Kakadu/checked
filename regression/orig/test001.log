<name>testChecked</name>
<author>Dmitri Boulytchev</author>
<date>15.08.2005</date>
<subsystem>common.checked</subsystem>
<description>Testing basic Checked monad operations</description>

<result>
Testing map function:
map (fun x -> x+1) (Ok 2) = (Ok 3)
map (fun x -> x+1) (Fail []) = (Fail [])
Testing (@>) operation:
(fun x -> x+1) @> (Ok 2) = (Ok 3)
(fun x -> x+1) @> (Fail []) = (Fail [])
Testing join function:
join (fun x -> Ok (x+1)) (Ok 2) = (Ok 3)
join (fun x -> Ok (x+1)) (Fail []) = (Fail [])
join (fun x -> Fail[]) (Ok 2) = (Fail [])
join (fun x -> Fail[]) (Fail []) = (Fail [])
Testing (@@>) function:
(fun x -> Ok (x+1)) @@> (Ok 2) = (Ok 3)
(fun x -> Ok (x+1)) @@> (Fail []) = (Fail [])
(fun x -> Fail[]) @@> (Ok 2) = (Fail [])
(fun x -> Fail[]) @@> (Fail []) = (Fail [])
Chain @> test:
(fun x -> x+1) @> (fun x -> x+2) @> (Ok 3) = (Ok 6)
(fun x -> x+1) @> (fun x -> x+2) @> (Fail []) = (Fail [])
Chain @>/@@> test:
(fun x -> x+1) @> (fun x -> Ok (x+2)) @>> (Ok 3) = (Ok 6)
(fun x -> x+1) @> (fun x -> Ok (x+2)) @>> (Fail []) = (Fail [])
Testing mapList function:
mapList [Ok 1; Ok 2; Ok 3] = (Ok 1, 2, 3)
mapList [Ok 1; Fail []; Ok 3] = (Ok 1, 3)
mapList [Ok 1; Fail [Msg.phrase "t1"]; Ok 3; Fail [Msg.phrase "t1"]] = (Fail [t1, t2])
Testing mapArray function:
mapArray [|Ok 1; Ok 2; Ok 3|] = (Ok 1, 2, 3)
mapArray [|Ok 1; Fail []; Ok 3|] = (Ok 1, 3)
mapArray [|Ok 1; Fail [Msg.phrase "t1"]; Ok 3; Fail [Msg.phrase "t2"]|] = (Fail [t1, t2])
</result>
