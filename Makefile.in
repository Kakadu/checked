# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This file was synchronized with template ($Revision: 7 $)
#
# define macros that creates directiries


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = .

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
CAMLP4 = @CAMLP4@
CAMLP4O = @CAMLP4O@
CAMLP4R = @CAMLP4R@
CC = @CC@
CFLAGS = @CFLAGS@
DEBUG = @DEBUG@
EXEEXT = @EXEEXT@
EXTRA_CMA = @EXTRA_CMA@
HAVE_LIB = @HAVE_LIB@
LOG = @LOG@
LTLIB = @LTLIB@
MAKEINFO = @MAKEINFO@
MODULE_INCLUDES = @MODULE_INCLUDES@
OBJEXT = @OBJEXT@
OCAMLC = @OCAMLC@
OCAMLDEP = @OCAMLDEP@
OCAMLDOC = @OCAMLDOC@
OCAMLDSORT = @OCAMLDSORT@
OCAMLFIND = @OCAMLFIND@
OCAMLLEX = @OCAMLLEX@
OCAMLLIB = @OCAMLLIB@
OCAMLMKLIB = @OCAMLMKLIB@
OCAMLMKTOP = @OCAMLMKTOP@
OCAMLOPT = @OCAMLOPT@
OCAMLVERSION = @OCAMLVERSION@
OCAMLYACC = @OCAMLYACC@
PACKAGE = @PACKAGE@
PARSER_INCLUDES = @PARSER_INCLUDES@
SITELIBDIR = @SITELIBDIR@
VERSION = @VERSION@
have_camlp4 = @have_camlp4@
have_camlp4o = @have_camlp4o@
have_camlp4r = @have_camlp4r@
have_ocamlc = @have_ocamlc@
have_ocamlcc = @have_ocamlcc@
have_ocamldep = @have_ocamldep@
have_ocamldoc = @have_ocamldoc@
have_ocamldotopt = @have_ocamldotopt@
have_ocamldsort = @have_ocamldsort@
have_ocamlfind = @have_ocamlfind@
have_ocamllex = @have_ocamllex@
have_ocamllexdotopt = @have_ocamllexdotopt@
have_ocamlmklib = @have_ocamlmklib@
have_ocamlmktop = @have_ocamlmktop@
have_ocamlopt = @have_ocamlopt@
have_ocamloptdotopt = @have_ocamloptdotopt@
have_ocamlyacc = @have_ocamlyacc@

mkinstalldirs = $(INSTALL_SCRIPT) -d

SUBDIRS = regression

# type in sources here
SOURCES = checked.ml
MLI = checked.mli

# sort sources before use
# (sorting is required for correct link order)
SORTED = $(shell $(OCAMLDSORT) $(SOURCES))

# CMO - all compiled objects
CMO := $(SORTED:.ml=.cmo)

# all compiled interfaces
CMI := $(CMO:.cmo=.cmi)
# all compiled native objects (OCaml' runtime)
CMX := $(CMO:.cmo=.cmx)
# all compiled native objects (separated)
OBJ := $(CMO:.cmo=.o)

# compiled library
CMA := $(addsuffix .cma, $(PACKAGE))
# compiled native library (OCaml' runtime)
CMXA := $(addsuffix .cmxa, $(PACKAGE))
# compiled native library (separated)
LIB := $(addsuffix .a, $(PACKAGE))
# executable bytecode
BYTE := $(addsuffix .byte, $(PACKAGE))
# executable native bytecode
NATIVE := $(addsuffix .opt, $(PACKAGE))

# extra compiled libraries used for linking
#EXTRA_CMA += $(addsuffix .cma, lib1 lib2)
# extra compiled native libraries used for native linking
EXTRA_CMXA := $(EXTRA_CMA:.cma=.cmxa)

CMO4CMA = $(CMO)
CMX4CMXA = $(CMO4CMA:.cmo=.cmx)

DOCFILES = $(PACKAGE).ps $(PACKAGE).html

# build target
TARGET := $(MLI) $(CMA) $(CMXA) $(CMO) $(CMI) $(LIB) META

# OCaml parser flags
#P4FLAGS := -pp "$(CAMLP4O) $(PARSER_INCLUDES) pa_log.cmo $(LOG)"
#P4FLAGS = -pp "$(CAMLP4R) $(PARSER_INCLUDES)"

# how to run yard
YARD := ocamlrun saved/yard

# bytcode compiling flags
BFLAGS = -w p $(MODULE_INCLUDES) $(P4FLAGS) $(DEBUG)
# native (optimized) compiling flags
OFLAGS = -w p $(MODULE_INCLUDES) $(P4FLAGS) 

# extra .cmi to delete those are generated from .ml
#CLEAN_CMI := $(CMO:.cmo=.cmi)
# other extra files to clean up
CLEAN_EXTRA := .depend doc wiki
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
CONFIG_CLEAN_FILES = 
DIST_COMMON =  Makefile.am Makefile.in acinclude.m4 aclocal.m4 \
config.guess config.sub configure configure.in install-sh missing \
mkinstalldirs


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
all: all-redirect
.SUFFIXES:
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status

$(ACLOCAL_M4):  configure.in  acinclude.m4
	cd $(srcdir) && $(ACLOCAL)

config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
$(srcdir)/configure: $(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@SET_MAKE@

all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive  \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" != "." || dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	-rm -rf $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) zxf $(distdir).tar.gz
	mkdir $(distdir)/=build
	mkdir $(distdir)/=inst
	dc_install_base=`cd $(distdir)/=inst && pwd`; \
	cd $(distdir)/=build \
	  && ../configure --srcdir=.. --prefix=$$dc_install_base \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) dist
	-rm -rf $(distdir)
	@banner="$(distdir).tar.gz is ready for distribution"; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"
dist: distdir
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
dist-all: distdir
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
distdir: $(DISTFILES)
	-rm -rf $(distdir)
	mkdir $(distdir)
	-chmod 777 $(distdir)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --foreign Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done
info-am:
info: info-recursive
dvi-am:
dvi: dvi-recursive
check-am: all-am
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
install-exec-am:
install-exec: install-exec-recursive

install-data-am:
install-data: install-data-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am:
uninstall: uninstall-recursive
all-am: Makefile
all-redirect: all-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
mostlyclean-am:  mostlyclean-tags mostlyclean-generic

mostlyclean: mostlyclean-recursive

clean-am:  clean-tags clean-generic mostlyclean-am

clean: clean-recursive

distclean-am:  distclean-tags distclean-generic clean-am

distclean: distclean-recursive
	-rm -f config.status

maintainer-clean-am:  maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive
	-rm -f config.status

.PHONY: install-data-recursive uninstall-data-recursive \
install-exec-recursive uninstall-exec-recursive installdirs-recursive \
uninstalldirs-recursive all-recursive check-recursive \
installcheck-recursive info-recursive dvi-recursive \
mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs-am \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


# default build:
# - update timestamp
# - build default target
# - build bytecode and optimized native code
all-am: update-revision $(TARGET)

# how to build documentation
doc: $(CMO)
	mkdir -p doc
	rm -f doc/*
	$(OCAMLDOC) $(MODULE_INCLUDES) $(P4FLAGS) -d doc -html *.mli *.ml

wiki: $(CMO)
	mkdir -p wiki
	rm -f wiki/*
	$(OCAMLDOC) $(MODULE_INCLUDES) $(P4FLAGS) -d wiki -g odoc_wiki.cmo *.mli *.ml

wc:
	ocamlwc -p *.mli *.ml

# default clean
clean-am:
	rm -fR $(CMA) $(CMXA) $(CMO) $(CMI) $(CLEAN_CMI) $(CMX) $(OBJ) $(LIB) META $(CLEAN_EXTRA)

@OCAMLFIND_TRUE@install-data-am: $(TARGET)
@OCAMLFIND_TRUE@	if test "$(SITELIBDIR)" != ""; then \
@OCAMLFIND_TRUE@	    $(mkinstalldirs) $(SITELIBDIR); \
@OCAMLFIND_TRUE@	    $(OCAMLFIND) install -destdir $(SITELIBDIR) $(PACKAGE) $(TARGET); \
@OCAMLFIND_TRUE@	else \
@OCAMLFIND_TRUE@	    $(OCAMLFIND) install $(PACKAGE) $(TARGET); \
@OCAMLFIND_TRUE@	fi

@OCAMLFIND_FALSE@install-data-am: $(TARGET)
@OCAMLFIND_FALSE@	if test "$(SITELIBDIR)" = ""; then \
@OCAMLFIND_FALSE@	    installdir=$(OCAMLLIB)/site-lib/$(PACKAGE); \
@OCAMLFIND_FALSE@	else \
@OCAMLFIND_FALSE@	    installdir=$(SITELIBDIR)/$(PACKAGE); \
@OCAMLFIND_FALSE@	fi; \
@OCAMLFIND_FALSE@	$(mkinstalldirs) $$installdir; \
@OCAMLFIND_FALSE@	for i in $(TARGET); do \
@OCAMLFIND_FALSE@	    $(INSTALL_DATA) $$i $$installdir/$$i; \
@OCAMLFIND_FALSE@	done

#install-exec-am: $(BYTE) $(NATIVE)
#	$(mkinstalldirs) ${bindir}
#	$(INSTALL_PROGRAM) $(BYTE) ${bindir}/$(BYTE)
#	$(INSTALL_PROGRAM) $(NATIVE) ${bindir}/$(PACKAGE)

uninstall-am:
@OCAMLFIND_TRUE@	if test "$(SITELIBDIR)" = ""; then \
@OCAMLFIND_TRUE@	    $(OCAMLFIND) remove $(PACKAGE); \
@OCAMLFIND_TRUE@	else \
@OCAMLFIND_TRUE@	    rm -fR $(SITELIBDIR)/$(PACKAGE); \
@OCAMLFIND_TRUE@	fi
@OCAMLFIND_FALSE@	if test "$(SITELIBDIR)" = ""; then \
@OCAMLFIND_FALSE@	    rm -fR $(OCAMLLIB)/site-lib/$(PACKAGE); \
@OCAMLFIND_FALSE@	else \
@OCAMLFIND_FALSE@	    rm -fR $(SITELIBDIR)/$(PACKAGE); \
@OCAMLFIND_FALSE@	fi
#	rm -f ${bindir}/$(BYTE) ${bindir}/$(PACKAGE)

# clean up docs in distclean mode
distclean-am:
	rm -fR doc

# cleanup autogenerated scripts in maintainer-clean mode
maintainer-clean-generic:
	rm -rf $(top_srcdir)/autom4te.cache $(CLEAN_EXTRA)

# what is byte-code target
byte-code: $(BYTE)

# how to build bytecode target
$(BYTE): $(CMO)
	$(OCAMLC) $(BFLAGS) -o $@ $(EXTRA_CMA) $(CMO)

# what is native-code target
native-code: $(NATIVE)

# how to build native code target
$(NATIVE): $(CMX)
	$(OCAMLOPT) $(OFLAGS) -o $@ $(EXTRA_CMXA) $(CMX)

# shorter acronims
bc: byte-code
nc: native-code

# how to build library
$(CMA): $(CMO4CMA)
	$(OCAMLC) -a -o $@ $(CMO4CMA)

# how to build native optimized library
$(CMXA): $(CMX4CMXA)
	$(OCAMLOPT) -a -o $@ $(CMX4CMXA)

# every build updates timestamp, so following commit
# will increase revision
update-revision: VERSION
	@umask 022; \
	tmp_version=`mktemp VERSION.XXXXXX`; \
	revision=`grep "\\$$Revision:" VERSION | sed -e 's,^\\$$,,' -e 's, \\$$$$,,'`; \
	date=`LC_TIME=C date`; \
	echo "\$$$$revision \$$" > $$tmp_version; \
	echo "Modify date: $$date" >> $$tmp_version; \
	cat $$tmp_version > VERSION; \
	rm -f $$tmp_version;

# META description for package
META:
	@echo "Generating META description"; \
	revision=`grep "\\$$Revision:" VERSION | sed -e 's,^\\$$,,' -e 's, \\$$$$,,'`; \
	date=`LC_TIME=C date`; \
	echo "version = \"$$revision\"" > $@; \
	echo "description = \"My cool project\"" >> $@; \
	echo "requires = \"\"" >> $@; \
	echo "archive(byte) = \"$(PACKAGE).cma\"" >> $@; \
	echo "archive(native) = \"$(PACKAGE).cmxa\"" >> $@

# save compiled revision into module
version.ml:
	@echo "Generating version.ml"; \
	revision=`grep "\\$$Revision:" VERSION | sed -e 's,^\\$$,,' -e 's, \\$$$$,,'`; \
	date=`LC_TIME=C date`; \
	echo "let version = \"$$revision\"" > $@; \
	echo "let date = \"$$date\"" >> $@

# resolve compiling dependencies
.depend: $(SOURCES)
	ocamldep $(MODULE_INCLUDES) $(PARSER_INCLUDES) *.mli *.ml > .depend

-include .depend

# generic rules
###############
%.cmi: %.mli
	$(OCAMLC) -c $(BFLAGS) $<

# Note: cmi <- mli should go first
%.cmi: %.ml
	$(OCAMLC) -c $(BFLAGS) $<

%.cmo: %.ml
	$(OCAMLC) -c $(BFLAGS) $<

%.o: %.ml
	$(OCAMLOPT) -c $(OFLAGS) $<

%.cmx: %.ml
	$(OCAMLOPT) -c $(OFLAGS) $<

%.ml: %.mll
	$(OCAMLLEX) $<

%.ml: %.mly
	$(OCAMLYACC) -v $<

%.mli: %.mly
	$(OCAMLYACC) -v $<

%.dvi: %.tex
	latex $< && latex $<

%.ps: %.dvi
	dvips $< -o $@ 

%.html: %.tex
	hevea $<

# make .tex from .ml
$(NAME).tex: $(SOURCES)
	$(OCAMLWEB) -o $@ $^

# yard scripts
%TokenKind.ml %.ml: %.yrd
	$(YARD) $< -o $* -gen combi -nums

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
